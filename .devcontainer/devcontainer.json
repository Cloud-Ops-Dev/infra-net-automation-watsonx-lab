{
  "name": "infra-net-automation-watsonx-lab",
  "build": { "dockerfile": "Dockerfile" },

  // Use official Dev Container Features to layer tools
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "username": "clay",
      "uid": "1000",
      "installZsh": true
    },
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.12"
    },
    "ghcr.io/devcontainers/features/terraform:1": {
      "version": "1.9.x"
    },
    "ghcr.io/devcontainers/features/aws-cli:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/ansible:1": {}
  },

  // Pass your local .env into the container (no secrets in git!)
  "runArgs": ["--env-file", ".env"],

  // Mount commonly-used creds from your host (read-only)
  "mounts": [
    "source=${localEnv:HOME}/.aws,target=/home/clay/.aws,type=bind,consistency=cached",
    "source=${localEnv:HOME}/.ssh,target=/home/clay/.ssh,type=bind,consistency=cached"
  ],

  // Auto-setup after the container is built
  "postCreateCommand": [
    "python3 -m pip install --upgrade pip pip-tools",
    // If requirements.in exists and is newer, (re)compile lockfile; else just install
    "bash -lc 'test -f requirements.in && { [ ! -f requirements.txt ] || [ requirements.in -nt requirements.txt ]; } && pip-compile --generate-hashes -o requirements.txt requirements.in || true'",
    "python3 -m pip install -r requirements.txt || true",
    // Helpful CLIs for formatting/linting
    "python3 -m pip install black ansible-lint || true"
  ],

  // Make life nice in VSCodium (Open VSX names work)
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "redhat.ansible",
        "hashicorp.terraform",
        "ms-azuretools.vscode-docker"
      ],
      "settings": {
        "python.defaultInterpreterPath": "/usr/bin/python3",
        "python.analysis.autoImportCompletions": true,
        "terminal.integrated.defaultProfile.linux": "zsh",
        "editor.formatOnSave": true
      }
    }
  },

  // Use the non-root user inside
  "remoteUser": "clay",

  // Keep container small/stable between launches
  "updateContentCommand": "",
  "initializeCommand": ""
}
